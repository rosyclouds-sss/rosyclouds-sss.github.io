<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Hexo</title>
        <link>http://yoursite.com</link>
        <description></description>
        <language>en</language>
        <pubDate>Thu, 03 Sep 2020 16:58:00 +0800</pubDate>
        <lastBuildDate>Thu, 03 Sep 2020 16:58:00 +0800</lastBuildDate>
        <category>first</category>
        <category>basics</category>
        <category>反向代理服务器</category>
        <item>
            <guid isPermalink="true">http://yoursite.com/2020/09/03/Nginx%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
            <title>Nginx常见面试题</title>
            <link>http://yoursite.com/2020/09/03/Nginx%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
            <category>反向代理服务器</category>
            <pubDate>Thu, 03 Sep 2020 16:58:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;1、请解释一下什么是Nginx&#34;&gt;&lt;a href=&#34;#1、请解释一下什么是Nginx&#34; class=&#34;headerlink&#34; title=&#34;1、请解释一下什么是Nginx?&#34;&gt;&lt;/a&gt;1、请解释一下什么是Nginx?&lt;/h2&gt;&lt;p&gt;Nginx—Ngine X，是一款免费的、自由的、开源的、高性能HTTP服务器和反向代理服务器；也是一个IMAP、POP3、SMTP代理服务器；Nginx以其高性能、稳定性、丰富的功能、简单的配置和低资源消耗而闻名。&lt;/p&gt;
&lt;p&gt;也就是说Nginx本身就可以托管网站（类似于Tomcat一样），进行Http服务处理，也可以作为反向代理服务器 、负载均衡器和HTTP缓存。&lt;/p&gt;
&lt;p&gt;Nginx 解决了服务器的C10K（就是在一秒之内连接客户端的数目为10k即1万）问题。它的设计不像传统的服务器那样使用线程处理请求，而是一个更加高级的机制—事件驱动机制，是一种异步事件驱动结构。&lt;/p&gt;
&lt;h2 id=&#34;2、请列举Nginx的一些特性&#34;&gt;&lt;a href=&#34;#2、请列举Nginx的一些特性&#34; class=&#34;headerlink&#34; title=&#34;2、请列举Nginx的一些特性&#34;&gt;&lt;/a&gt;2、请列举Nginx的一些特性&lt;/h2&gt;&lt;p&gt;跨平台：可以在大多数Unix like 系统编译运行。而且也有Windows的移植版本。 &lt;/p&gt;
&lt;p&gt;配置异常简单：非常的简单，易上手。 &lt;/p&gt;
&lt;p&gt;非阻塞、高并发连接：数据复制时，磁盘I/O的第一阶段是非阻塞的。官方测试能支持5万并发连接，实际生产中能跑2~3万并发连接数（得益于Nginx采用了最新的epoll事件处理模型（消息队列）。 &lt;/p&gt;
&lt;p&gt;Nginx代理和后端Web服务器间无需长连接； &lt;/p&gt;
&lt;p&gt;Nginx接收用户请求是异步的，即先将用户请求全部接收下来，再一次性发送到后端Web服务器，极大减轻后端Web服务器的压力。 &lt;/p&gt;
&lt;p&gt;发送响应报文时，是边接收来自后端Web服务器的数据，边发送给客户端。 &lt;/p&gt;
&lt;p&gt;网络依赖性低，理论上只要能够ping通就可以实施负载均衡，而且可以有效区分内网、外网流量。 &lt;/p&gt;
&lt;p&gt;支持内置服务器检测。Nginx能够根据应用服务器处理页面返回的状态码、超时信息等检测服务器是否出现故障，并及时返回错误的请求重新提交到其它节点上。 &lt;/p&gt;
&lt;p&gt;此外还有内存消耗小、成本低廉（比F5硬件负载均衡器廉价太多）、节省带宽、稳定性高等特点。&lt;/p&gt;
&lt;h2 id=&#34;3、请列举Nginx和Apache-之间的不同点&#34;&gt;&lt;a href=&#34;#3、请列举Nginx和Apache-之间的不同点&#34; class=&#34;headerlink&#34; title=&#34;3、请列举Nginx和Apache 之间的不同点&#34;&gt;&lt;/a&gt;3、请列举Nginx和Apache 之间的不同点&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Nginx&lt;/th&gt;
&lt;th&gt;Apache&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Nginx是一个基于事件的web服务器&lt;/td&gt;
&lt;td&gt;Apache是一个基于流程的服务器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;所有的请求都是由一个线程处理&lt;/td&gt;
&lt;td&gt;单个线程处理单个请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nginx避免子进程的概念&lt;/td&gt;
&lt;td&gt;Apache是基于进程的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nginx类似与速度&lt;/td&gt;
&lt;td&gt;Apache类似于功率&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nginx在内存消耗和连接方面比较好&lt;/td&gt;
&lt;td&gt;Apache在内存消耗和连接上并没有提高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nginx在负载均衡方面表现良好&lt;/td&gt;
&lt;td&gt;当流量到达进程的极限时，Apache将拒绝新的连接&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;对于PHP来说，Nginx可能更可取，因为它更支持PHP&lt;/td&gt;
&lt;td&gt;Apache支持更多的OS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nginx不支持像IBMI和OpenVMS一样的OC&lt;/td&gt;
&lt;td&gt;Apache提供了比Nginx更多的功能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nginx只具有核心功能&lt;/td&gt;
&lt;td&gt;Apache支持的PHP、PythonPerl和其他语言使用插件，当应用程序基于Python或Ruby时，它非常有用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nginx的性能和可伸缩性不依赖与硬件&lt;/td&gt;
&lt;td&gt;Apache依赖于CPU和内存等硬件组件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&#34;4、请解释Nginx如何处理HTTP请求。&#34;&gt;&lt;a href=&#34;#4、请解释Nginx如何处理HTTP请求。&#34; class=&#34;headerlink&#34; title=&#34;4、请解释Nginx如何处理HTTP请求。&#34;&gt;&lt;/a&gt;4、请解释Nginx如何处理HTTP请求。&lt;/h2&gt;&lt;p&gt;Nginx 是一个高性能的 Web 服务器，能够同时处理大量的并发请求。它结合多进程机制和异步机制 ，异步机制使用的是异步非阻塞方式 ，接下来就给大家介绍一下 Nginx 的多线程机制和异步非阻塞机制 。&lt;/p&gt;
&lt;h4 id=&#34;1、异步非阻塞机制&#34;&gt;&lt;a href=&#34;#1、异步非阻塞机制&#34; class=&#34;headerlink&#34; title=&#34;1、异步非阻塞机制&#34;&gt;&lt;/a&gt;1、异步非阻塞机制&lt;/h4&gt;&lt;p&gt;每个工作进程 使用 异步非阻塞方式 ，可以处理 多个客户端请求 。&lt;/p&gt;
&lt;p&gt;当某个 工作进程 接收到客户端的请求以后，调用 IO 进行处理，如果不能立即得到结果，就去 处理其他请求 （即为 非阻塞 ）；而 客户端 在此期间也 无需等待响应 ，可以去处理其他事情（即为 异步 ）。&lt;/p&gt;
&lt;p&gt;当 IO 返回时，就会通知此 工作进程 ；该进程得到通知，暂时 挂起 当前处理的事务去 响应客户端请求 。&lt;/p&gt;
&lt;h4 id=&#34;2、多进程机制&#34;&gt;&lt;a href=&#34;#2、多进程机制&#34; class=&#34;headerlink&#34; title=&#34;2、多进程机制&#34;&gt;&lt;/a&gt;2、多进程机制&lt;/h4&gt;&lt;p&gt;服务器每当收到一个客户端时，就有 服务器主进程 （ master process ）生成一个 子进程（ worker process ）出来和客户端建立连接进行交互，直到连接断开，该子进程就结束了。&lt;/p&gt;
&lt;p&gt;使用进程的好处是各个进程之间相互独立，不需要加锁，减少了使用锁对性能造成影响，同时降低编程的复杂度，降低开发成本。其次，采用独立的进程，可以让进程互相之间不会影响 ，如果一个进程发生异常退出时，其它进程正常工作， master 进程则很快启动新的 worker 进程，确保服务不会中断，从而将风险降到最低。&lt;/p&gt;
&lt;p&gt;缺点是操作系统生成一个子进程需要进行 内存复制等操作，在资源和时间上会产生一定的开销。当有大量请求时，会导致系统性能下降 。&lt;/p&gt;
&lt;h2 id=&#34;5、在Nginx中，如何使用未定义的服务器名称来阻止处理请求&#34;&gt;&lt;a href=&#34;#5、在Nginx中，如何使用未定义的服务器名称来阻止处理请求&#34; class=&#34;headerlink&#34; title=&#34;5、在Nginx中，如何使用未定义的服务器名称来阻止处理请求?&#34;&gt;&lt;/a&gt;5、在Nginx中，如何使用未定义的服务器名称来阻止处理请求?&lt;/h2&gt;&lt;p&gt;只需将请求删除的服务器就可以定义为：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;server&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  listen &lt;span class=&#34;number&#34;&gt;80&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  server_name &lt;span class=&#34;string&#34;&gt;&#34;&#34;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;444&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;这里，服务器名被保留为一个空字符串，它将在没有“主机”头字段的情况下匹配请求，而一个特殊的Nginx的非标准代码444被返回，从而终止连接。&lt;/p&gt;
&lt;h2 id=&#34;6、请列举Nginx服务器的最佳用途。&#34;&gt;&lt;a href=&#34;#6、请列举Nginx服务器的最佳用途。&#34; class=&#34;headerlink&#34; title=&#34;6、请列举Nginx服务器的最佳用途。&#34;&gt;&lt;/a&gt;6、请列举Nginx服务器的最佳用途。&lt;/h2&gt;&lt;p&gt;Nginx服务器的最佳用法是在网络上部署动态HTTP内容，使用SCGI、WSGI应用程序服务器、用于脚本的FastCGI处理程序。它还可以作为负载均衡器。&lt;/p&gt;
&lt;h2 id=&#34;7、-使用“反向代理服务器”的优点是什么&#34;&gt;&lt;a href=&#34;#7、-使用“反向代理服务器”的优点是什么&#34; class=&#34;headerlink&#34; title=&#34;7、 使用“反向代理服务器”的优点是什么?&#34;&gt;&lt;/a&gt;7、 使用“反向代理服务器”的优点是什么?&lt;/h2&gt;&lt;p&gt;反向代理服务器可以隐藏源服务器的存在和特征。它充当互联网云和web服务器之间的中间层。这对于安全方面来说是很好的，特别是当您使用web托管服务时。&lt;/p&gt;
&lt;h2 id=&#34;8、请解释Nginx服务器上的Master和Worker进程分别是什么&#34;&gt;&lt;a href=&#34;#8、请解释Nginx服务器上的Master和Worker进程分别是什么&#34; class=&#34;headerlink&#34; title=&#34;8、请解释Nginx服务器上的Master和Worker进程分别是什么?&#34;&gt;&lt;/a&gt;8、请解释Nginx服务器上的Master和Worker进程分别是什么?&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;主程序 Master process 启动后，通过一个 for 循环来 接收 和 处理外部信号 ；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;主进程通过 fork() 函数产生 worker 子进程 ，每个子进程执行一个 for循环来实现Nginx服务器对事件的接收和处理 。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://img-blog.csdnimg.cn/20200901101015504.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0p1bkxpWXVu,size_16,color_FFFFFF,t_70#pic_center&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;一般推荐 worker 进程数与CPU内核数一致，这样一来不存在大量的子进程生成和管理任务，避免了进程之间竞争CPU 资源和进程切换的开销。而且 Nginx 为了更好的利用 多核特性 ，提供了 CPU 亲缘性的绑定选项，我们可以将某一个进程绑定在某一个核上，这样就不会因为进程的切换带来 Cache 的失效。&lt;/p&gt;
&lt;p&gt;对于每个请求，有且只有一个工作进程 对其处理。首先，每个 worker 进程都是从 master进程 fork 过来。在 master 进程里面，先建立好需要 listen 的 socket（listenfd） 之后，然后再 fork 出多个 worker 进程。&lt;/p&gt;
&lt;p&gt;所有 worker 进程的 listenfd 会在新连接到来时变得可读 ，为保证只有一个进程处理该连接，所有 worker 进程在注册 listenfd 读事件前抢占 accept_mutex ，抢到互斥锁的那个进程注册 listenfd 读事件 ，在读事件里调用 accept 接受该连接。&lt;/p&gt;
&lt;p&gt;当一个 worker 进程在 accept 这个连接之后，就开始读取请求、解析请求、处理请求，产生数据后，再返回给客户端 ，最后才断开连接。这样一个完整的请求就是这样的了。我们可以看到，一个请求，完全由 worker 进程来处理，而且只在一个 worker 进程中处理。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img-blog.csdnimg.cn/20200901101045339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0p1bkxpWXVu,size_16,color_FFFFFF,t_70#pic_center&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 Nginx 服务器的运行过程中， 主进程和工作进程 需要进程交互。交互依赖于 Socket 实现的管道来实现。&lt;/p&gt;
&lt;h2 id=&#34;9、请解释代理设计中的正向代理和反向代理&#34;&gt;&lt;a href=&#34;#9、请解释代理设计中的正向代理和反向代理&#34; class=&#34;headerlink&#34; title=&#34;9、请解释代理设计中的正向代理和反向代理?&#34;&gt;&lt;/a&gt;9、请解释代理设计中的正向代理和反向代理?&lt;/h2&gt;&lt;p&gt;首先，代理服务器一般指局域网内部的机器通过代理服务器发送请求到互联网上的服务器，代理服务器一般作用在客户端。例如：GoAgent翻墙软件。我们的客户端在进行翻墙操作的时候，我们使用的正是正向代理，通过正向代理的方式，在我们的客户端运行一个软件，将我们的HTTP请求转发到其他不同的服务器端，实现请求的分发。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img-blog.csdnimg.cn/2020090110111137.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0p1bkxpWXVu,size_16,color_FFFFFF,t_70#pic_center&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;反向代理服务器作用在服务器端，它在服务器端接收客户端的请求，然后将请求分发给具体的服务器进行处理，然后再将服务器的相应结果反馈给客户端。Nginx就是一个反向代理服务器软件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img-blog.csdnimg.cn/20200901101136581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0p1bkxpWXVu,size_16,color_FFFFFF,t_70#pic_center&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;从上图可以看出：客户端必须设置正向代理服务器，当然前提是要知道正向代理服务器的IP地址，还有代理程序的端口。&lt;br&gt;反向代理正好与正向代理相反，对于客户端而言代理服务器就像是原始服务器，并且客户端不需要进行任何特别的设置。客户端向反向代理的命名空间（name-space）中的内容发送普通请求，接着反向代理将判断向何处（原始服务器）转交请求，并将获得的内容返回给客户端。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img-blog.csdnimg.cn/20200901101203445.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0p1bkxpWXVu,size_16,color_FFFFFF,t_70#pic_center&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;10、请解释是否有可能将Nginx的错误替换为502错误、503&#34;&gt;&lt;a href=&#34;#10、请解释是否有可能将Nginx的错误替换为502错误、503&#34; class=&#34;headerlink&#34; title=&#34;10、请解释是否有可能将Nginx的错误替换为502错误、503?&#34;&gt;&lt;/a&gt;10、请解释是否有可能将Nginx的错误替换为502错误、503?&lt;/h2&gt;&lt;p&gt;502 =错误网关&lt;/p&gt;
&lt;p&gt;503 =服务器超载&lt;/p&gt;
&lt;p&gt;有可能，但是您可以确保fastcgi_intercept_errors被设置为ON，并使用错误页面指令。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img-blog.csdnimg.cn/20200901101229411.png#pic_center&#34; alt=&#34;在这里插入图片描述&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;11、在Nginx中，解释如何在URL中保留双斜线&#34;&gt;&lt;a href=&#34;#11、在Nginx中，解释如何在URL中保留双斜线&#34; class=&#34;headerlink&#34; title=&#34;11、在Nginx中，解释如何在URL中保留双斜线?&#34;&gt;&lt;/a&gt;11、在Nginx中，解释如何在URL中保留双斜线?&lt;/h2&gt;&lt;p&gt;要在URL中保留双斜线，就必须使用merge_slashes_off;&lt;/p&gt;
&lt;p&gt;语法:merge_slashes [on/off]&lt;/p&gt;
&lt;p&gt;默认值: merge_slashes on&lt;/p&gt;
&lt;p&gt;环境: http，server&lt;/p&gt;
&lt;h2 id=&#34;12、请解释ngx-http-upstream-module的作用是什么&#34;&gt;&lt;a href=&#34;#12、请解释ngx-http-upstream-module的作用是什么&#34; class=&#34;headerlink&#34; title=&#34;12、请解释ngx_http_upstream_module的作用是什么?&#34;&gt;&lt;/a&gt;12、请解释ngx_http_upstream_module的作用是什么?&lt;/h2&gt;&lt;p&gt;ngx_http_upstream_module用于定义可通过fastcgi传递、proxy传递、uwsgi传递、memcached传递和scgi传递指令来引用的服务器组。&lt;/p&gt;
&lt;h2 id=&#34;13、请解释什么是C10K问题&#34;&gt;&lt;a href=&#34;#13、请解释什么是C10K问题&#34; class=&#34;headerlink&#34; title=&#34;13、请解释什么是C10K问题?&#34;&gt;&lt;/a&gt;13、请解释什么是C10K问题?&lt;/h2&gt;&lt;p&gt;C10K问题是指无法同时处理大量客户端(10,000)的网络套接字。&lt;/p&gt;
&lt;h2 id=&#34;14、请陈述stub-status和sub-filter指令的作用是什么&#34;&gt;&lt;a href=&#34;#14、请陈述stub-status和sub-filter指令的作用是什么&#34; class=&#34;headerlink&#34; title=&#34;14、请陈述stub_status和sub_filter指令的作用是什么?&#34;&gt;&lt;/a&gt;14、请陈述stub_status和sub_filter指令的作用是什么?&lt;/h2&gt;&lt;p&gt;Stub_status指令：该指令用于了解Nginx当前状态的当前状态，如当前的活动连接，接受和处理当前读/写/等待连接的总数；&lt;/p&gt;
&lt;p&gt;Sub_filter指令：它用于搜索和替换响应中的内容，并快速修复陈旧的数据；&lt;/p&gt;
&lt;h2 id=&#34;15、解释Nginx是否支持将请求压缩到上游&#34;&gt;&lt;a href=&#34;#15、解释Nginx是否支持将请求压缩到上游&#34; class=&#34;headerlink&#34; title=&#34;15、解释Nginx是否支持将请求压缩到上游?&#34;&gt;&lt;/a&gt;15、解释Nginx是否支持将请求压缩到上游?&lt;/h2&gt;&lt;p&gt;您可以使用Nginx模块gunzip将请求压缩到上游。gunzip模块是一个过滤器，它可以对不支持“gzip”编码方法的客户机或服务器使用“内容编码:gzip”来解压缩响应。&lt;/p&gt;
&lt;h2 id=&#34;16、解释如何在Nginx中获得当前的时间&#34;&gt;&lt;a href=&#34;#16、解释如何在Nginx中获得当前的时间&#34; class=&#34;headerlink&#34; title=&#34;16、解释如何在Nginx中获得当前的时间?&#34;&gt;&lt;/a&gt;16、解释如何在Nginx中获得当前的时间?&lt;/h2&gt;&lt;p&gt;要获得Nginx的当前时间，必须使用SSI模块、$date_gmt和$date_local的变量。&lt;/p&gt;
&lt;p&gt;Proxy_set_header THE-TIME $date_gmt;&lt;/p&gt;
&lt;h2 id=&#34;17、用Nginx服务器解释-s的目的是什么&#34;&gt;&lt;a href=&#34;#17、用Nginx服务器解释-s的目的是什么&#34; class=&#34;headerlink&#34; title=&#34;17、用Nginx服务器解释-s的目的是什么?&#34;&gt;&lt;/a&gt;17、用Nginx服务器解释-s的目的是什么?&lt;/h2&gt;&lt;p&gt;用于运行Nginx -s参数的可执行文件。&lt;/p&gt;
&lt;h2 id=&#34;18、解释如何在Nginx服务器上添加模块&#34;&gt;&lt;a href=&#34;#18、解释如何在Nginx服务器上添加模块&#34; class=&#34;headerlink&#34; title=&#34;18、解释如何在Nginx服务器上添加模块?&#34;&gt;&lt;/a&gt;18、解释如何在Nginx服务器上添加模块?&lt;/h2&gt;&lt;p&gt;在编译过程中，必须选择Nginx模块，因为Nginx不支持模块的运行时间选择。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://yoursite.com/2020/07/30/AOP%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E6%80%9D%E6%83%B3/</guid>
            <title>AOP面向切面思想</title>
            <link>http://yoursite.com/2020/07/30/AOP%E9%9D%A2%E5%90%91%E5%88%87%E9%9D%A2%E6%80%9D%E6%83%B3/</link>
            <pubDate>Thu, 30 Jul 2020 20:50:32 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Spring-Aop&#34;&gt;&lt;a href=&#34;#Spring-Aop&#34; class=&#34;headerlink&#34; title=&#34;Spring Aop&#34;&gt;&lt;/a&gt;Spring Aop&lt;/h1&gt;&lt;h2 id=&#34;一、Aop-nbsp-nbsp-的概述&#34;&gt;&lt;a href=&#34;#一、Aop-nbsp-nbsp-的概述&#34; class=&#34;headerlink&#34; title=&#34;一、Aop&amp;nbsp;&amp;nbsp;的概述&#34;&gt;&lt;/a&gt;一、Aop&amp;nbsp;&amp;nbsp;的概述&lt;/h2&gt;&lt;h3 id=&#34;1、什么是Aop&#34;&gt;&lt;a href=&#34;#1、什么是Aop&#34; class=&#34;headerlink&#34; title=&#34;1、什么是Aop&#34;&gt;&lt;/a&gt;1、什么是Aop&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;AOP&lt;/strong&gt;（Aspect Orient Programming）是一种设计思想，是软件设计领域中的&lt;strong&gt;面向切面&lt;/strong&gt; &lt;em&gt;编程&lt;/em&gt;，它是面向对象编程(OOP)的一种补充和完善。它以通过预编译方式和运行期动态代理方式，实现在不修改源代码的情况下给程序动态统一添加额外功能的一种技术。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br&gt;&lt;strong&gt;AOP&lt;/strong&gt;与&lt;strong&gt;OOP&lt;/strong&gt;字面意思相近，但其实两者完全是面向不同领域的设计思想。实际项目中我们通常将面向对象理解为一个静态过程(例如一个系统有多少个模块，一个模块有哪些对象，对象有哪些属性)，面向切面的运行期代理方式，理解为一个动态过程，可以在对象运行时动态织入一些扩展功能或控制对象执行。&lt;/p&gt;
&lt;h3 id=&#34;2、AOP-应用场景&#34;&gt;&lt;a href=&#34;#2、AOP-应用场景&#34; class=&#34;headerlink&#34; title=&#34;2、AOP 应用场景&#34;&gt;&lt;/a&gt;2、AOP 应用场景&lt;/h3&gt;&lt;p&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;实际项目中通常会将系统分为两大部分，一部分是核心业务，一部分是非核业务。在编程实现时我们首先要完成的是核心业务的实现，非核心业务一般是通过特定方式切入到系统中，这种特定方式一般就是借助AOP进行实现。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AOP就是要基于OCP(开闭原则)，在不改变原有系统核心业务代码的基础上动态添加一些扩展功能并可以”控制”对象的执行。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;2、AOP-应用原理分析-先了解-？&#34;&gt;&lt;a href=&#34;#2、AOP-应用原理分析-先了解-？&#34; class=&#34;headerlink&#34; title=&#34;2、AOP 应用原理分析(先了解)？&#34;&gt;&lt;/a&gt;2、AOP 应用原理分析(先了解)？&lt;/h3&gt;&lt;p&gt;Spring AOP底层基于代理机制实现功能扩展：&lt;/p&gt;
&lt;p&gt;（1）  假如目标对象(被代理对象)实现接口，则底层可以采用&lt;strong&gt;JDK动态代理机制&lt;/strong&gt;为目标对象创建代理对象（目标类和代理类会实现共同接口）。&lt;/p&gt;
&lt;p&gt;（2）假如目标对象(被代理对象)没有实现接口，则底层可以采用&lt;strong&gt;CGLIB代理机制&lt;/strong&gt;为目标对象创建代理对象（默认创建的代理类会继承目标对象类型）。&lt;/p&gt;
&lt;p&gt;说明:Spring boot2.x 中AOP现在默认使用的CGLIB代理,假如需要使用JDK动态代理可以在配置文件(applicatiion.properties)中进行如下配置: &lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;spring.aop.proxy-target-&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;3、AOP-相关术语分析&#34;&gt;&lt;a href=&#34;#3、AOP-相关术语分析&#34; class=&#34;headerlink&#34; title=&#34;3、AOP 相关术语分析&#34;&gt;&lt;/a&gt;3、AOP 相关术语分析&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;切面(aspect): 横切面对象,一般为一个具体类对象(可以借助@Aspect声明)。&lt;/li&gt;
&lt;li&gt;通知(Advice):在切面的某个特定连接点上执行的动作(扩展功能)，例如around,before,after等。&lt;/li&gt;
&lt;li&gt;连接点(joinpoint):程序执行过程中某个特定的点，一般指被拦截到的的方法。&lt;/li&gt;
&lt;li&gt;切入点(pointcut):对多个连接点(Joinpoint)一种定义,一般可以理解为多个连接点的集合。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;二、Spring-AOP快速实践&#34;&gt;&lt;a href=&#34;#二、Spring-AOP快速实践&#34; class=&#34;headerlink&#34; title=&#34;二、Spring AOP快速实践&#34;&gt;&lt;/a&gt;二、Spring AOP快速实践&lt;/h2&gt;&lt;h3 id=&#34;1、业务描述&#34;&gt;&lt;a href=&#34;#1、业务描述&#34; class=&#34;headerlink&#34; title=&#34;1、业务描述&#34;&gt;&lt;/a&gt;1、业务描述&lt;/h3&gt;&lt;p&gt;基于项目中的核心业务，添加简单的日志操作，借助SLF4J日志API输出目标方法的执行时长。(前提，不能修改目标方法代码)&lt;/p&gt;
&lt;h3 id=&#34;2、项目创建及配置&#34;&gt;&lt;a href=&#34;#2、项目创建及配置&#34; class=&#34;headerlink&#34; title=&#34;2、项目创建及配置&#34;&gt;&lt;/a&gt;2、项目创建及配置&lt;/h3&gt;&lt;p&gt;创建maven项目或在已有项目基础上添加AOP启动依赖：&lt;/p&gt;
&lt;figure class=&#34;highlight&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;lt;artifactId&amp;gt;spring-boot-starter-aop&amp;lt;/artifactId&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;说明：基于此依赖spring可以整合Aspect框架快速完成AOP的基本实现。Aspect是一个面向切面的框架，他定义了AOP的一些语法，有一个专门的字节码生成器来生成遵守java规范的class文件。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://yoursite.com/2020/07/28/MyBlog%E6%90%AD%E5%BB%BA/</guid>
            <title>Github博客-Hexo框架</title>
            <link>http://yoursite.com/2020/07/28/MyBlog%E6%90%AD%E5%BB%BA/</link>
            <category>first</category>
            <pubDate>Tue, 28 Jul 2020 21:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Github博客-Hexo框架&#34;&gt;&lt;a href=&#34;#Github博客-Hexo框架&#34; class=&#34;headerlink&#34; title=&#34;Github博客-Hexo框架&#34;&gt;&lt;/a&gt;Github博客-Hexo框架&lt;/h1&gt;&lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#FD8002&#34;&gt;&lt;font face=&#34;STCAIYUN&#34; size=&#34;5&#34;&gt;介绍&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;博客的文章主要使用MarkDown文档格式

&lt;p&gt;个人博客分为静态与动态两种：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;静态博客&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;动态博客&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;方便快捷&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;有前端与后端之分，动态管理，用户管理，功能基本完善&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;因为考虑但方便快捷问题，选择了与朋友相同的静态博客&lt;/p&gt;
&lt;h2 id=&#34;搭建初始化博客&#34;&gt;&lt;a href=&#34;#搭建初始化博客&#34; class=&#34;headerlink&#34; title=&#34;搭建初始化博客&#34;&gt;&lt;/a&gt;&lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#FD8002&#34;&gt;&lt;font face=&#34;微软雅黑&#34; size=&#34;5&#34; color=&#34;#FFFFFF&#34;&gt;搭建初始化博客&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt;&lt;/h2&gt;&lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#FFCDFF&#34;&gt;&lt;font face=&#34;微软雅黑&#34; size=&#34;4&#34; color=&#34;#FFFFFF&#34;&gt;下载安装git&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;打开git的官方网站–&lt;a href=&#34;https://git-scm.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://git-scm.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;下载并安装git&lt;/li&gt;
&lt;li&gt;设置git身份&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#000000&#34;&gt;&lt;font face=&#34;微软雅黑&#34; color=&#34;#FFFFFF&#34;&gt;git config --global user.email &#34;you@example.com&#34;  
git config --global user.name &#34;Your Name&#34;&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt;

&lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#FFCDFF&#34;&gt;&lt;font face=&#34;微软雅黑&#34; size=&#34;4&#34; color=&#34;#FFFFFF&#34;&gt;下载安装Node.js&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;打开Nodejs的官方网站–&lt;a href=&#34;https://nodejs.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://nodejs.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;下载并安装LTS长期支持版本&lt;/li&gt;
&lt;li&gt;打开命令窗口（Win+R）并输入代码查看是否安装成功node -v和npm -v&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#FFCDFF&#34;&gt;&lt;font face=&#34;微软雅黑&#34; size=&#34;4&#34; color=&#34;#FFFFFF&#34;&gt;安装Hexo博客框架&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;因为国内镜像源延迟问题，安装中国的CNMP（-g为全局安装）&lt;br&gt;npm install -g cnpm –registry=&lt;a href=&#34;https://registry.npm.taobao.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://registry.npm.taobao.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;检查是否安装成功cnpm -v&lt;/li&gt;
&lt;li&gt;接下来安装hexo博客框架cnpm install -g hexo-cli&lt;/li&gt;
&lt;li&gt;检查是否安装成功hexo -v&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#FFCDFF&#34;&gt;&lt;font face=&#34;微软雅黑&#34; size=&#34;4&#34; color=&#34;#FFFFFF&#34;&gt;初始化博客&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;建立自己的博客文件夹（如果后期想删除直接删除该文件夹就行）&lt;/li&gt;
&lt;li&gt;CMD指向该目录，并执行语句hexo init初始化博客&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;如果出现下面代码说明没有安装git&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#000000&#34;&gt;&lt;font face=&#34;微软雅黑&#34; color=&#34;#FFFFFF&#34;&gt;INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git
&#39;git&#39; 不是内部或外部命令，也不是可运行的程序或批处理文件。
WARN  git clone failed. Copying data instead
WARN  Failed to install dependencies. Please run &#39;npm install&#39; manually!&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;启动博客hexo server就会出现实例地址&lt;a href=&#34;http://localhost:4000/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://localhost:4000/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#FFCDFF&#34;&gt;&lt;font face=&#34;微软雅黑&#34; size=&#34;4&#34; color=&#34;#FFFFFF&#34;&gt;网络部署git插件&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;在命令行窗口选择到博客根目录&lt;/li&gt;
&lt;li&gt;安装git部署插件：执行语句cnpm install –save hexo-deployer-git&lt;/li&gt;
&lt;li&gt;设置目录下的_config.yml文件（站点配置文件）&lt;strong&gt;冒号后一定空格&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#repository: git@git.coding.net:xxx&amp;#x2F;xxx.coding.me.git       &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;repo: https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;xxx&amp;#x2F;xxx.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;开始上传代码hexo deploy&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#FFCDFF&#34;&gt;&lt;font face=&#34;微软雅黑&#34; size=&#34;4&#34; color=&#34;#FFFFFF&#34;&gt;多仓库部署&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt;

&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  repo: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    github: https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;XXX&amp;#x2F;XXX.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    coding: https:&amp;#x2F;&amp;#x2F;e.coding.net&amp;#x2F;XXX&amp;#x2F;XXX.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
  &lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#FFCDFF&#34;&gt;&lt;font face=&#34;微软雅黑&#34; size=&#34;4&#34; color=&#34;#FFFFFF&#34;&gt;网络部署常见问题&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt;

&lt;p&gt;  密码输入错误：进入Windows的控制面板，打开凭据管理器，选择Windows凭据，更改账号密码&lt;/p&gt;
&lt;p&gt;GitHub仓库名称：用户名.github.io&lt;/p&gt;
&lt;p&gt;Coding仓库名称&lt;/p&gt;
&lt;h2 id=&#34;装饰我的博客&#34;&gt;&lt;a href=&#34;#装饰我的博客&#34; class=&#34;headerlink&#34; title=&#34;装饰我的博客&#34;&gt;&lt;/a&gt;&lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#FD8002&#34;&gt;&lt;font face=&#34;微软雅黑&#34; size=&#34;5&#34; color=&#34;#FFFFFF&#34;&gt;装饰我的博客&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt;&lt;/h2&gt; &lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#FFCDFF&#34;&gt;&lt;font face=&#34;微软雅黑&#34; size=&#34;4&#34; color=&#34;#FFFFFF&#34;&gt;修改主题&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt;

&lt;p&gt;  搜索或者在Hexo主题官网挑选主题-&lt;a href=&#34;https://hexo.io/themes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://hexo.io/themes/&lt;/a&gt;&lt;br&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;打开主题介绍，根据介绍安装必须插件，执行安装操作（一般是克隆git，修改配置文件）&lt;br&gt;  我使用的主题是&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cd themes&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git clone https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;ZHD99&amp;#x2F;hexo-theme-dearmsdan.git dearmsdan&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 &lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#FFCDFF&#34;&gt;&lt;font face=&#34;微软雅黑&#34; size=&#34;3&#34; color=&#34;#FFFFFF&#34;&gt;结构化自己的页面&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt; 

&lt;p&gt; 博客页面结构目录位置:&lt;/p&gt;
&lt;p&gt;修改主程序的_config.yml文件&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;theme: dearmsdan&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
  &lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#FFCDFF&#34;&gt;&lt;font face=&#34;微软雅黑&#34; size=&#34;3&#34; color=&#34;#FFFFFF&#34;&gt;修改代码显示格式&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt; 

&lt;p&gt;  一个比较美观的代码块样式：&lt;br&gt;  在head头标签内链接css样式&lt;br&gt;link rel=”stylesheet” href=”&lt;a href=&#34;https://oindk07nf.qnssl.com/atom-one-dark.css&amp;quot;&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://oindk07nf.qnssl.com/atom-one-dark.css&amp;quot;&lt;/a&gt; media=”screen” type=”text/css”&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;% codeblock lang:js%&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;代码块&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;% endcodeblock %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

 &lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#FFCDFF&#34;&gt;&lt;font face=&#34;微软雅黑&#34; size=&#34;3&#34; color=&#34;#FFFFFF&#34;&gt;插件的添加&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt; 
 &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;在网络中搜索插件并根据说明进行安装  
  来必力、畅言  
  cnzz、百度统计。在最后的页脚进行部署



&lt;h2 id=&#34;【hexo】hexo博客部署到github&#34;&gt;&lt;a href=&#34;#【hexo】hexo博客部署到github&#34; class=&#34;headerlink&#34; title=&#34;【hexo】hexo博客部署到github&#34;&gt;&lt;/a&gt;&lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#FD8002&#34;&gt;&lt;font face=&#34;微软雅黑&#34; size=&#34;5&#34; color=&#34;#FFFFFF&#34;&gt;【hexo】hexo博客部署到github&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt;&lt;/h2&gt; &lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#FFCDFF&#34;&gt;&lt;font face=&#34;微软雅黑&#34; size=&#34;4&#34; color=&#34;#FFFFFF&#34;&gt;一、在github上创建仓库&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt; 

&lt;p&gt; 首先注册一个github账号，注册时填写的username要谨慎&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;1.创建一个Repository，名称规则为：&lt;/strong&gt;&lt;br&gt; &lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;username.github.io&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;** 2.编辑hexo/config.yml文件如下：**&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  repository: https:&amp;#x2F;&amp;#x2F;github.com&amp;#x2F;Chocolate-Lee&amp;#x2F;Chocolate-Lee.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
   &lt;table&gt;&lt;div&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#FFCDFF&#34;&gt;&lt;font face=&#34;微软雅黑&#34; size=&#34;4&#34; color=&#34;#FFFFFF&#34;&gt;二、为github设置SSH Keys&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/div&gt;&lt;/table&gt; 
   **1.检查极其上是否已经存在id_rsa.pub文件**
   &lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ls -al ~&amp;#x2F;.ssh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
   **2.不存在的话使其生成**  

   &lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;   ssh-keygen -t rsa -C &amp;quot;xxxxxx@xxx.com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#96;&amp;#96;&amp;#96;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   一路回车就可以了  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ** 3.赋值id_rsa.pub文件内容，在github的settings中，点选SSH keys，添加一个key，将内容粘贴进去。**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;**4.测试是否添加成功，在刚刚的机器上输入**&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ssh -T &lt;a href=&#34;mailto:git@github.com&#34;&gt;git@github.com&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;table&amp;gt;&amp;lt;div&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td bgcolor&amp;#x3D;#FFCDFF&amp;gt;&amp;lt;font face&amp;#x3D;&amp;quot;微软雅黑&amp;quot; size&amp;#x3D;4 color&amp;#x3D;#FFFFFF&amp;gt;三、部署到github上&amp;lt;&amp;#x2F;font&amp;gt;&amp;lt;&amp;#x2F;td&amp;gt;&amp;lt;&amp;#x2F;tr&amp;gt;&amp;lt;&amp;#x2F;div&amp;gt;&amp;lt;&amp;#x2F;table&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;**1.在hexo中分别进行生成，发布：**&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;hexo g&lt;br&gt;hexo d&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;**2.部署成功后，可通过 http://chocolate-lee.github.io 进行访问，其中将chocolate-lle替换为你自己的username即可**

&amp;lt;table&amp;gt;&amp;lt;div&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td bgcolor=#FFCDFF&amp;gt;&amp;lt;font face=&amp;quot;微软雅黑&amp;quot; size=4 color=#FFFFFF&amp;gt;五、配置自己的域名&amp;lt;/font&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/table&amp;gt;

1.准备一个自己的域名  
2.解析一个二级域名，可采用A记录或者CNAME记录，A记录就是将二级域名指向github上的ip，我使用的是CNAME。  
3.将自己的二级域名指向chocolate-lee.github.io  
4.创建文件hexo/source/CNAME  
5.编辑CNAME文件内容为你的域名  
6.发布，即可，其中内容替换为自己的。  


##  &amp;lt;table&amp;gt;&amp;lt;div&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td bgcolor=#FD8002&amp;gt;&amp;lt;font face=&amp;quot;微软雅黑&amp;quot; size=5 color=#FFFFFF&amp;gt;文章书写发布&amp;lt;/font&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/table&amp;gt;

&amp;lt;table&amp;gt;&amp;lt;div&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td bgcolor=#FFCDFF&amp;gt;&amp;lt;font face=&amp;quot;微软雅黑&amp;quot; size=4 color=#FFFFFF&amp;gt;文章的编写 - 分类标题日期&amp;lt;/font&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/table&amp;gt;
在MarkDown文件中，文件头写入文章信息，格式如下，可参考Hexo文档。  

&amp;lt;table&amp;gt;&amp;lt;div&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td bgcolor=#16937&amp;gt;&amp;lt;font face=&amp;quot;微软雅黑&amp;quot; color=#FFFFFF&amp;gt;
---  
title: &amp;quot;文章标题&amp;quot;  
date: (2000-01-01 08:00)  
author: me  
cover_picture: 封面图片(&amp;quot;url&amp;quot;)[可选]  
desc: 文章的描述  
top: 1 置顶文章[可选]  
updated: 更新日期[可选]  
comments: 是否打开评论(on/off)[可选]  
tags: 标签[可选]  
- tag  
- tag  
categories: 分类  
- category  
- category  
---
&amp;lt;/font&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/table&amp;gt;

&amp;lt;table&amp;gt;&amp;lt;div&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td bgcolor=#FFCDFF&amp;gt;&amp;lt;font face=&amp;quot;微软雅黑&amp;quot; size=4 color=#FFFFFF&amp;gt;操作使用Hexo&amp;lt;/font&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/table&amp;gt;

**1、启动博客：hexo server 可以简写成 hexo s  
2、hexo clean #用来清理缓存文件  
3、hexo generate #生成文件  
4、hexo server #运行本地服务器  
5、hexo deploy #部署到服务器  **
&lt;/code&gt;&lt;/pre&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://yoursite.com/2020/07/22/JAVA%E5%8F%91%E5%B1%95%E5%8F%B2/</guid>
            <title>JAVA语言发展史</title>
            <link>http://yoursite.com/2020/07/22/JAVA%E5%8F%91%E5%B1%95%E5%8F%B2/</link>
            <category>first</category>
            <pubDate>Wed, 22 Jul 2020 21:06:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;JAVA语言发展史&#34;&gt;&lt;a href=&#34;#JAVA语言发展史&#34; class=&#34;headerlink&#34; title=&#34;JAVA语言发展史&#34;&gt;&lt;/a&gt;JAVA语言发展史&lt;/h1&gt;&lt;h2 id=&#34;发展背景&#34;&gt;&lt;a href=&#34;#发展背景&#34; class=&#34;headerlink&#34; title=&#34;发展背景&#34;&gt;&lt;/a&gt;发展背景&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;创始人：&lt;/strong&gt; &lt;em&gt;詹姆斯·高斯林&lt;/em&gt;（James Gosling）1977年获得了加拿大卡尔加里大 学计算机科学学士学位，1983年     获得了美国卡内基梅隆大学计算机科学博士学位，毕业后到IBM工作，设计IBM第一代工作站NeWS系统，但不受重视。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;后来转至&lt;strong&gt;Sun&lt;/strong&gt;公司，1990年，与Patrick，Naughton和Mike Sheridan等人合作“绿色计划”，后来发展一套语言叫做“Oak”，后改名为&lt;strong&gt;Java&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;Sun公司于1995年推出&lt;/p&gt;
&lt;p&gt;1991年sun公司James Gosling等人开始开发Oak语言&lt;/p&gt;
&lt;p&gt;1994年，将Oak语言更名为Java&lt;/p&gt;
&lt;p&gt;1995年5月23日，Sun公司正式在互联网上免费发布Java语言，标志着JAVA语言的正式诞生。几个月后，超过10万人下载Java语言。&lt;/p&gt;
&lt;p&gt;1996年，JDK1.0发布，这是java发展历程中的重要里程碑，标志着java成为一种独立的开发工具。并获得第一笔投资1亿元&lt;/p&gt;
&lt;p&gt;1997年2月，JDK1.1发布。&lt;/p&gt;
&lt;p&gt;1998年提出jdk1.2，更名为java2，12月，第二代Java平台的企业版J2EE发布。&lt;/p&gt;
&lt;p&gt;之后推出jdk1.3  jdk1.4和J2SE1.3&lt;/p&gt;
&lt;p&gt;1999年4月27日，HotSpot虚拟机发布。&lt;/p&gt;
&lt;p&gt;同年6月，Java2被分成三个版本：J2SE（标准版）、J2EE(企业版)、J2ME(微型版),是Java发展过程中最重要的一个里程碑，标志着Java的应用开始普及。&lt;/p&gt;
&lt;p&gt;2000年5月,JDK1.3,JDK1.4和J2SE1.3相继发布。&lt;/p&gt;
&lt;p&gt;2001年9月24日，J2EE1.3发布。&lt;/p&gt;
&lt;p&gt;2002年2月，J2SE1.4发布,各种开源框架大量出现。&lt;/p&gt;
&lt;p&gt;2005年更名为jdk5.0，进行了大幅的版本改进，6月，Java SE 6.0发布，三个版本分别改为：JavaSE， JavaEE，， JavaME。&lt;/p&gt;
&lt;p&gt;2006年sun公司宣布将Java作为免费软件对外发布&lt;/p&gt;
&lt;p&gt;2007年3月起，全世界所有的开发人员均可对Java源代码进行修改&lt;/p&gt;
&lt;p&gt;2007年推出jdk6.0&lt;/p&gt;
&lt;p&gt;2009年4月Oracle以74亿美元收购了sun公司&lt;/p&gt;
&lt;p&gt;2011年7月由Oracle正式发布jdk7&lt;/p&gt;
&lt;p&gt;2014年3月正式发布了java8&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://yoursite.com/2020/07/16/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
            <title>计算机基础知识</title>
            <link>http://yoursite.com/2020/07/16/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
            <category>basics</category>
            <pubDate>Thu, 16 Jul 2020 22:24:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;计算机基础知识&#34;&gt;&lt;a href=&#34;#计算机基础知识&#34; class=&#34;headerlink&#34; title=&#34;计算机基础知识&#34;&gt;&lt;/a&gt;计算机基础知识&lt;/h1&gt;&lt;h3 id=&#34;一、&#34;&gt;&lt;a href=&#34;#一、&#34; class=&#34;headerlink&#34; title=&#34;一、&#34;&gt;&lt;/a&gt;一、&lt;/h3&gt;&lt;h4 id=&#34;（一）、计算机&#34;&gt;&lt;a href=&#34;#（一）、计算机&#34; class=&#34;headerlink&#34; title=&#34;（一）、计算机&#34;&gt;&lt;/a&gt;（一）、计算机&lt;/h4&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;计算机&lt;/strong&gt;（_Computer_）全称：电子计算机，俗称电脑。是一种能够按照程序运行，自动、高速处理数据的现代化智能电子设备。由硬件和软件所组成，没有安装任何软件的计算机称为裸机。常见的形式有台式计算机、笔记本计算机。按照规模分为微型机、小型机、大型机、巨型机（超级计算机）等。&lt;/p&gt;
&lt;h4 id=&#34;（二）、计算机硬件&#34;&gt;&lt;a href=&#34;#（二）、计算机硬件&#34; class=&#34;headerlink&#34; title=&#34;（二）、计算机硬件&#34;&gt;&lt;/a&gt;（二）、计算机硬件&lt;/h4&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;计算机硬件&lt;/strong&gt;（_Computer Hardware_）是指计算机系统中由电子，机械和光电元件等组成的各种物理装置的总称。这些物理装置按系统结构的要求构成一个有机整体为计算机软件运行提供物质基础。&lt;/p&gt;
&lt;p&gt;计算机通常由==CPU、主板、内存、电源、主机箱、硬盘、显卡、键盘、鼠标，显示器==等多个部件组成。&lt;/p&gt;
&lt;h4 id=&#34;三-、-计算机软件&#34;&gt;&lt;a href=&#34;#三-、-计算机软件&#34; class=&#34;headerlink&#34; title=&#34;(三)、 计算机软件&#34;&gt;&lt;/a&gt;(三)、 计算机软件&lt;/h4&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;strong&gt;计算机软件&lt;/strong&gt;（_Computer Software_）是使用计算机过程中必不可少的东西，计算机软件可以使计算机按照事先预定好的顺序完成特定的功能，计算机软件按照其功能划分为系统软件与应用软件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;系统软件&lt;/strong&gt;： DOS(Disk Operating System), Windows, Linux, Unix, Mac, Android, iOS&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;应用软件&lt;/strong&gt;：像我们常用的office  QQ  英雄联盟  王者荣耀  和平营地&lt;/p&gt;
&lt;h4 id=&#34;四-、软件开发&#34;&gt;&lt;a href=&#34;#四-、软件开发&#34; class=&#34;headerlink&#34; title=&#34;(四)、软件开发&#34;&gt;&lt;/a&gt;(四)、软件开发&lt;/h4&gt;&lt;p&gt;软件：&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;按照特定顺序组织的计算机数据和指令的集合开发&lt;br&gt;软件的制作过程：&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;软件开发借助开发工具与计算机语言制作软件&lt;/p&gt;
&lt;h4 id=&#34;（五）、计算机语言&#34;&gt;&lt;a href=&#34;#（五）、计算机语言&#34; class=&#34;headerlink&#34; title=&#34;（五）、计算机语言&#34;&gt;&lt;/a&gt;（五）、计算机语言&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;计算机语言是&lt;/strong&gt;：&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;人类进行沟通交流的各种表达符号，方便人与人之间进行沟通与信息交换的计算机语言&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;人与计算机之间进行信息交流沟通也是通过一种特殊的语言，计算机语言中也有字符，符号等等！！！&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;常见的计算机语言如C,C++,C#,JAVA等等&lt;del&gt;~&lt;/del&gt;&lt;/p&gt;
&lt;h3 id=&#34;（六）、人机交互方式&#34;&gt;&lt;a href=&#34;#（六）、人机交互方式&#34; class=&#34;headerlink&#34; title=&#34;（六）、人机交互方式&#34;&gt;&lt;/a&gt;（六）、人机交互方式&lt;/h3&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;软件的出现实现了人与计算机之间更好的交互。&lt;/p&gt;
&lt;p&gt;交互方式：&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;图形化界面：这种方式简单直观，使用者易于接受，容易上手操作。&lt;br&gt;命令行方式：&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;需要有一个控制台，输入特定的指令，让计算机完成一些操作。较为麻烦，需要记录住一些命令。&lt;/p&gt;
&lt;h3 id=&#34;（七）、键盘功能键及快捷键介绍&#34;&gt;&lt;a href=&#34;#（七）、键盘功能键及快捷键介绍&#34; class=&#34;headerlink&#34; title=&#34;（七）、键盘功能键及快捷键介绍&#34;&gt;&lt;/a&gt;（七）、键盘功能键及快捷键介绍&lt;/h3&gt;&lt;p&gt;Tab                            &lt;/p&gt;
&lt;p&gt;Shift      Ctrl Alt&lt;/p&gt;
&lt;p&gt;空格       Enter&lt;/p&gt;
&lt;p&gt;Window&lt;/p&gt;
&lt;p&gt;上下左右&lt;/p&gt;
&lt;p&gt;PrtSc(PrintScreen)屏幕截图&lt;/p&gt;
&lt;p&gt;Ctrl+A   全选&lt;/p&gt;
&lt;p&gt;Ctrl+C    复制&lt;/p&gt;
&lt;p&gt;Ctrl+V   粘贴&lt;/p&gt;
&lt;p&gt;Ctrl+X    剪切&lt;/p&gt;
&lt;p&gt;Ctrl+Z    撤销&lt;/p&gt;
&lt;p&gt;Ctrl+S    保存…&lt;/p&gt;
&lt;h3 id=&#34;（八）、常用的DOS命令&#34;&gt;&lt;a href=&#34;#（八）、常用的DOS命令&#34; class=&#34;headerlink&#34; title=&#34;（八）、常用的DOS命令&#34;&gt;&lt;/a&gt;（八）、常用的DOS命令&lt;/h3&gt;&lt;p&gt;打开DOS控制台的方式&lt;/p&gt;
&lt;p&gt;常用DOS命令&lt;/p&gt;
&lt;p&gt;cmd 进入DOS窗口                        #快捷方式，浏览目录，直接输入CMD跳转&lt;/p&gt;
&lt;p&gt;默认是在c盘下，可以切换盘符。&lt;/p&gt;
&lt;p&gt;e:    进入e盘&lt;/p&gt;
&lt;p&gt;dir 列出当前目录下的目录和文件&lt;/p&gt;
&lt;p&gt;mkdir   新建文件夹&lt;/p&gt;
&lt;p&gt;rmdir   删除文件夹&lt;/p&gt;
&lt;p&gt;cd java 进入java目录&lt;/p&gt;
&lt;p&gt;cd .. 退到上层目录&lt;/p&gt;
&lt;p&gt;cd / 退到根目录&lt;/p&gt;
&lt;p&gt;exit : 退出dos命令行&lt;/p&gt;
&lt;p&gt;cls : (clear screen)清屏&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://yoursite.com/2020/07/16/%E6%AC%A2%E8%BF%8E%E4%BD%BF%E7%94%A8CSDN-markdown%E7%BC%96%E8%BE%91%E5%99%A8/</guid>
            <title>我的第一个博客</title>
            <link>http://yoursite.com/2020/07/16/%E6%AC%A2%E8%BF%8E%E4%BD%BF%E7%94%A8CSDN-markdown%E7%BC%96%E8%BE%91%E5%99%A8/</link>
            <category>first</category>
            <pubDate>Thu, 16 Jul 2020 08:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;我的第一个博客&#34;&gt;&lt;a href=&#34;#我的第一个博客&#34; class=&#34;headerlink&#34; title=&#34;我的第一个博客&#34;&gt;&lt;/a&gt;我的第一个博客&lt;/h1&gt;&lt;h2 id=&#34;认知&#34;&gt;&lt;a href=&#34;#认知&#34; class=&#34;headerlink&#34; title=&#34;认知&#34;&gt;&lt;/a&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#cdcdcd&#34;&gt;&lt;font face=&#34;STCAIYUN&#34; size=&#34;5&#34;&gt;认知&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/h2&gt;&lt;p&gt; &amp;ensp;&amp;nbsp;今天正式步入博客写文章的行列，很长时间以来对博客都有一定的兴趣，包括看到身边的朋友都在利用博客记录各色各样的笔记以及生活的小趣味。&lt;br&gt;&lt;br&gt;&lt;br&gt; 自己也以为博客是和自己玩的QQ空间、微博一样，分享自己喜怒哀乐小生活的地方，随着自己的进一步了解，感觉自己的认知可能还在停留在几年前&lt;del&gt;~&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;为什么选择了博客&#34;&gt;&lt;a href=&#34;#为什么选择了博客&#34; class=&#34;headerlink&#34; title=&#34;为什么选择了博客&#34;&gt;&lt;/a&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#cdcdcd&#34;&gt;&lt;font face=&#34;STCAIYUN&#34; size=&#34;5&#34;&gt;为什么选择了博客&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/h2&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;一直以来自己的生活都很安逸，直到最近因为自己需要学习新的技术，需要写的东西有点多，自己的笔记也分为多种，下面解释一下自己感觉笔记的优缺点：&lt;br&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;笔记类型&lt;/th&gt;
&lt;th&gt;优点&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;缺点&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;纸质笔记&lt;/td&gt;
&lt;td&gt;写作的实际过程可以更加批判性地思考选择写下来的信息&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;比较浪费时间、容易丢失&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;电子笔记&lt;/td&gt;
&lt;td&gt;记录知识点多、知识点全面、可以更新到手机、U盘等地方&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;记录的东西多，没时间去思考&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;虽然各有优缺点，但这些都不太适合小雲自己使用，微博 和QQ空间更不适合去保存文件，所以小雲选择了github和CSDN实时更新跟进自己的笔记。&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;###   &lt;table&gt;&lt;tr&gt;&lt;td bgcolor=&#34;#cdcdcd&#34;&gt;&lt;font face=&#34;STCAIYUN&#34; size=&#34;4&#34;&gt;自己对博客的应用及看法&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;小雲一直在探寻适合自己的笔记应用，但使用了博客技术显然可以跟进自己的进度，存档自己的笔记，同时也可以展示自己的学习成果，更重要的是进入某个公司时，可能会看一下你的学习成果，展示自己搭建的博客，给自己多一项加分项。&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;hr&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;曾经的笔记我自己不会做很大的改动，我相信自己会有很大的进步，接下来我会慢慢分享自己的学习成果，同时自己也会进一步的复习。&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;center&gt;谢谢!!!&lt;/center&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;下面分享一下我朋友的博客&lt;br&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;https://Aifery.cn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34; title=&#34;标题&#34;&gt;Aifery&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
 ]]></description>
        </item>
    </channel>
</rss>
